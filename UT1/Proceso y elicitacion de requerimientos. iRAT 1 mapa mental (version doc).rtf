{\rtf1\ansi\deff0\deflang2057\plain\fs24\fet1
{\fonttbl
{\f0\froman Arial;}
}
{\colortbl
;
\red0\green170\blue255;
\red255\green255\blue255;
\red77\green196\blue255;
\red61\green71\blue77;
}
{\info
{\createim\yr2023\mo3\dy31\hr19\min4}
}

\paperw11907\paperh16840\margl1800\margr1800\margt1440\margb1440
\slmult0\cbpat1\ltrpar\li0
{\cb1\fs20
Proceso y elicitacion de requerimientos.
}
\par\pard\plain
\slmult0\cbpat3\ltrpar\li200
{\cf2\cb3\fs20
Caso de uso
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
Descripcion de una accion o actividad.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Evitan el lenguaje tecnico y apuestan por el del usuario final.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Se centran en describir como alcanzar una meta o tarea
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
En inegneria de software describe una carcateristica del sistema.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Muestran lo que el actor hace o debe hacer para realizar una operaci\u243\'3fn.
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
Diagrama de caso de uso
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Representa a un sistema o subsistema como un conjunto de interacciones que se desarrollar\u225\'3fn entre casos de uso y entre estos y sus actores en respuesta a un evento que inicia un actor principal.
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
**Actor**:Toda entidad externa al sistema que guarda una relaci\u243\'3fn con este y que le demanda una funcionalidad. Ejemplo:...
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
Humanos.
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
Otros sistema
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
El tiempo (entidad abstracta).
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Sirven para especificar la comunicaci\u243\'3fn y el comportamiento de un sistema mediante su interacci\u243\'3fn con los usuarios y/u otros sistemas
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Tipos de relaciones...
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
<<communicates>>
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\fs20
Relacion entre un actor y un caso de uso que denota la participacion del actor.
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
<<uses>> o <<include>>
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\fs20
Relacion de dependencian entre dos casos de uso que denota la inclusion del compartamiento de uno en otro.
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\fs20
El actor que realiza el caso de uso base tambi\u233\'3fn realiza el caso de uso incluido.
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\fs20
Se usa cuando se repite un comportamiento en dos casos de uso y queremos evitar dicha repetici\u243\'3fn.
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
generalizacion
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\fs20
Indica que un caso de uso es una variante de otro.
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
<<extend>>
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\fs20
Se utiliza una relaci\u243\'3fn entre casos de uso cuando uno es similar a otro pero hace algo m\u225\'3fs (variante).
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\fs20
Un actor que lleve a cabo el caso de uso base puede realizar o no sus extensiones.
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\fs20
Se usa cuando se presenta una variaci\u243\'3fn del comportamiento normal
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
Pueden existir relacion de herencia entre casos de uso o entre actores
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Se utilizan para ilustrar los requisitos del sistema al mostrar c\u243\'3fmo reacciona a eventos que se producen en su \u225\'3fmbito o en \u233\'3fl mismo.
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Su uso es com\u250\'3fn para la captura de requisitos funcionales
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
Modelo de caso de uso
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Es la combinacion de casos de uso y sus diagramas
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
Son elaborados habitualmente por los analistas de requisitos y los clientes.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Puede servir como tecnica de extraccion de requsitos que da una vision mas orientada a las necesidades del usuario.
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Igualmente no establecen completamente los requisitos funcionales ni permiten determinar los requisitos no funcionales. Por lo que deben complementarse con informacion adicional.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Puede facilitar la priorizacion de requisitos.
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
Su uso se extiende a las primeras parre de un desarrollo.
}
\par\pard\plain
\slmult0\cbpat3\ltrpar\li200
{\cf2\cb3\fs20
Historias de usuario
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
Es una explicacion informal de una caracteristica de una pieza de software escrita desde el punto de vista el usuario final.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Su proposito es articular como dicha caracteristica provee valor al cliente.
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
Usa un lenguaje no tecnico que describen el resultado deseado.
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
Es una meta final y no una carcateristica.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Los requerimientos se agregan luego.
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
Beneficios...
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Las historias mantienen el foco en los usuarios.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Habilitan la colaboriacion
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Manejan soluciones creativas.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Crean impulso
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
Generalmente son escritas por el due\u241\'3fo del producto, el gerente del mismo, o el gerente de programacion.
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
\u191\'3fcomo escribir una historia de usuario?
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Definir cuando esta "hecha"
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Definifr que pasos necesitan ser cunplidos y quienes lo tienen que cumplir.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Considerar para quien o quienes es la historia.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Ordeber los pasos
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Escuchar el feedback
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
El tiempo, considear en dividir las historias muy largas.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Ejemplos...
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
La estructura de una historia de usuarioo puede ser...
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
"Como [persona], [quiero], [por lo que]"
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\fs20
Persona: Para quien estamos creadno esto?
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\fs20
Quiero: Describir la intencion.
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\fs20
Por lo que: Cual es el benecico que se trata de alcanzar.
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
"Persiba + necesidad + proposito"
}
\par\pard\plain
\slmult0\cbpat3\ltrpar\li200
{\cf2\cb3\fs20
Ingenieria de software
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
Estudia la creaci\u243\'3fn de software confiable y de calidad, bas\u225\'3fndose en m\u233\'3ftodos y t\u233\'3fcnicas de ingenier\u237\'3fa, y brindando soporte operacional y de mantenimiento.
}
\par\pard\plain
\slmult0\cbpat4\ltrpar\li600
{\cf2\cb4\fs20
Metodologia.
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
La ingeneria de software requerie llevar a cabo multiples tareas agrupadas en etapas. Al conjunto de estas etapas se le denomina **ciclo de vida**.
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\b\fs20
Etapas.
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\fs20
**Obtencion de los requisitos**
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\b\fs20
Analisis de requisitos
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\b\fs20
Limitaciones
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\b\fs20
Especificacion
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
La especificaci\u243\'3fn de requisitos describe el comportamiento esperado en el software una vez desarrollado: Ejemplos: **Caso de uso**, **Historias de usuario**
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\b\fs20
Arquitectura
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
La arquitectura de software consiste en el dise\u241\'3fo de componentes de una aplicaci\u243\'3fn (entidades del negocio), generalmente utilizando patrones de arquitectura
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\b\fs20
Programacion
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
La complejidad y la duraci\u243\'3fn de esta etapa est\u225\'3f \u237\'3fntimamente relacionada al o a los lenguajes de programaci\u243\'3fn utilizados
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\b\fs20
Desarrollo de la aplicacion.
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\b\fs20
Pruebas de software
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
Consiste en comprobar que el software realice correctamente las tareas indicadas en la especificaci\u243\'3fn del problema
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\b\fs20
Implementacion
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
Una implementaci\u243\'3fn es la realizaci\u243\'3fn de una especificaci\u243\'3fn t\u233\'3fcnica o algoritmos con un programa, componente software, u otro sistema de c\u243\'3fmputo.
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
La etapa de implementaci\u243\'3fn del dise\u241\'3fo de software es el proceso de convertir una especificaci\u243\'3fn del sistema en un sistema ejecutable.
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\b\fs20
Documentacion
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\b\fs20
Mantenimiento
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
Esto puede llevar m\u225\'3fs tiempo incluso que el desarrollo del software inicial. Alrededor de 2/3 del tiempo de ciclo de vida de un proyecto
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
Ventajas desde...
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\fs20
Gestion
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
Facilitar la tarea de seguimiento del proyecto
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
Optimizar el uso de recursos
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
Facilitar la comunicaci\u243\'3fn entre usuarios y desarrolladores
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
Facilitar la evaluaci\u243\'3fn de resultados y cumplimiento de objetivos
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\fs20
Ingenerios de software
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
Ayudar a comprender el problema
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
Permitir la reutilizaci\u243\'3fn
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
Facilitar el mantenimiento del producto final
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
Optimizar el conjunto y cada una de las fases del proceso de desarrollo
}
\par\pard\plain
\slmult0\ltrpar\li1200
{\fs20
Cliente o usuario final
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
Garantizar el nivel de calidad del producto final
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
Obtener el ciclo de vida adecuado para el proyecto
}
\par\pard\plain
\slmult0\ltrpar\li1400
{\fs20
Confianza en los plazos del tiempo mostrados en la definici\u243\'3fn del proyecto
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
Trata de sistematizar el proceso de creacion de software con el fin de acotar el riesgo de fracaso en la consecuci\u243\'3fn del objetivo
}
\par\pard\plain
\slmult0\cbpat3\ltrpar\li200
{\cf2\cb3\fs20
Requisito
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
Necesidad documentada sobre el contenido, forma o funcionalidad de un producto o servicio
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
En la ingenieria clasica establecen **que** debe hacer el sistema, pero **no** c\u243\'3fmo hacerlo.
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
Hay 3 tipos.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
**Funcionales**
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Especifica algo que el sistema debe hacer. Establece el comportamiento del software.
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Los requisitos de comportamiento para cada requisito funcional se muestran en los casos de uso.
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Son **complementados** por los requisitos **no funcionales** , que se enfocan en cambio en el dise\u241\'3fo o la implementaci\u243\'3fn.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
**No funcionales** ( o atributo de calidad )
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Especifica sobre el propio sistema (rendimientos, calidad, etc) y como debe realizar sus funciones. Ejemplo: Facilidad de uso.
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
especifica criterios que pueden usarse para juzgar la operaci\u243\'3fn de un sistema en lugar de sus comportamientos espec\u237\'3fficos
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Se refieren a los requisitos que describen caracteristicas de funcionamiento.
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Se suelen clasificar en...
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
Calidad de ejecucion (usabilidad, seguridad, etc)
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
Calidad de evolucion (testeabilidad, escalabilidad, etc)
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Otros tipos de limitaciones internas que afectan en forma indirecta al producto. Ejemplo: Compatibilidad con algun sistema operativo, o el cumplimento de leyes.
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
Pseudorequisito: Requisitos referidos al entorno donde sera instalado o implementado el sistema (que determinan en gran medida su desarrollo). Pueden ser custiones como hardware o software.
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
Los bien formulados deben cumplir **6** caracteristicas (que suelen ser subjetivas):
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
**No ambiguo**: Claro, preciso y solo debe tner una unica interpretacion.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
**Conciso**
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
**Consistente**: No deben haber requisitos que esten en conflicto entre si entera o parcialmente.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
**Completo**:  Los requisitos deben contener en s\u237\'3f mismos toda la informaci\u243\'3fn necesaria, y no necesitar a otras fuentes externas que los expliquen con m\u225\'3fs detalle.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
**Alcanzable**: Debe de ser un objetivo realialista.
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
**Verificable**: Se debe poder verificar con certeza si el requsito fue sastisfecho o no.
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
**Analisis de requisitos** es la etapa en la que se estaudan los requisitos parfa verificar que estos sean adecuados.
}
\par\pard\plain
}